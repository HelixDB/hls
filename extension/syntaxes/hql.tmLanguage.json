{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "HelixQL",
  "scopeName": "source.helixql",
  "patterns": [
    { "include": "#comments" },
    { "include": "#schema-definitions" },
    { "include": "#query-definitions" },
    { "include": "#keywords" },
    { "include": "#types" },
    { "include": "#operators" },
    { "include": "#literals" },
    { "include": "#identifiers" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.helixql",
          "begin": "//",
          "end": "$",
          "patterns": [
            {
              "name": "constant.character.escape.helixql",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "schema-definitions": {
      "patterns": [
        {
          "name": "meta.schema.node.helixql",
          "begin": "\\b(N)::(\\w+)\\s*\\{",
          "beginCaptures": {
            "1": { "name": "keyword.other.schema.helixql" },
            "2": { "name": "entity.name.type.node.helixql" }
          },
          "end": "\\}",
          "patterns": [
            { "include": "#field-definitions" },
            { "include": "#comments" }
          ]
        },
        {
          "name": "meta.schema.edge.helixql",
          "begin": "\\b(E)::(\\w+)\\s*\\{",
          "beginCaptures": {
            "1": { "name": "keyword.other.schema.helixql" },
            "2": { "name": "entity.name.type.edge.helixql" }
          },
          "end": "\\}",
          "patterns": [
            { "include": "#edge-properties" },
            { "include": "#comments" }
          ]
        },
        {
          "name": "meta.schema.vector.helixql",
          "begin": "\\b(V)::(\\w+)\\s*\\{",
          "beginCaptures": {
            "1": { "name": "keyword.other.schema.helixql" },
            "2": { "name": "entity.name.type.vector.helixql" }
          },
          "end": "\\}",
          "patterns": [
            { "include": "#field-definitions" },
            { "include": "#comments" }
          ]
        }
      ]
    },
    "field-definitions": {
      "patterns": [
        {
          "name": "meta.field.indexed.helixql",
          "match": "\\b(INDEX)\\s+(\\w+)\\s*:\\s*([A-Z]\\w*|\\[[A-Z]\\w*\\])",
          "captures": {
            "1": { "name": "keyword.other.index.helixql" },
            "2": { "name": "variable.other.field.helixql" },
            "3": { "name": "entity.name.type.helixql" }
          }
        },
        {
          "name": "meta.field.default.helixql",
          "match": "\\b(\\w+)\\s*:\\s*([A-Z]\\w*|\\[[A-Z]\\w*\\])\\s+(DEFAULT)\\s+(.+?)(?=,|\\})",
          "captures": {
            "1": { "name": "variable.other.field.helixql" },
            "2": { "name": "entity.name.type.helixql" },
            "3": { "name": "keyword.other.default.helixql" },
            "4": { "name": "constant.other.default-value.helixql" }
          }
        },
        {
          "name": "meta.field.helixql",
          "match": "\\b(\\w+)\\s*:\\s*([A-Z]\\w*|\\[[A-Z]\\w*\\])",
          "captures": {
            "1": { "name": "variable.other.field.helixql" },
            "2": { "name": "entity.name.type.helixql" }
          }
        }
      ]
    },
    "edge-properties": {
      "patterns": [
        {
          "match": "\\b(From|To)\\s*:\\s*(\\w+)",
          "captures": {
            "1": { "name": "keyword.other.edge-direction.helixql" },
            "2": { "name": "entity.name.type.helixql" }
          }
        },
        {
          "name": "meta.properties.helixql",
          "begin": "\\b(Properties)\\s*:\\s*\\{",
          "beginCaptures": {
            "1": { "name": "keyword.other.properties.helixql" }
          },
          "end": "\\}",
          "patterns": [
            { "include": "#field-definitions" },
            { "include": "#comments" }
          ]
        }
      ]
    },
    "query-definitions": {
      "patterns": [
        {
          "name": "meta.query.helixql",
          "begin": "\\b(QUERY)\\s+(\\w+)\\s*\\(",
          "beginCaptures": {
            "1": { "name": "keyword.other.query.helixql" },
            "2": { "name": "entity.name.function.query.helixql" }
          },
          "end": "\\)\\s*(=>)",
          "endCaptures": {
            "1": { "name": "keyword.operator.arrow.helixql" }
          },
          "patterns": [
            { "include": "#parameters" },
            { "include": "#comments" }
          ]
        }
      ]
    },
    "parameters": {
      "patterns": [
        {
          "name": "meta.parameter.helixql",
          "match": "\\b(\\w+)\\s*:\\s*([A-Z]\\w*|\\[[A-Z]\\w*\\])",
          "captures": {
            "1": { "name": "variable.parameter.helixql" },
            "2": { "name": "entity.name.type.helixql" }
          }
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.helixql",
          "match": "\\b(RETURN|FOR|IN|WHERE|EXISTS|AND|OR|IF|ELSE)\\b"
        },
        {
          "name": "keyword.other.operation.helixql",
          "match": "\\b(AddN|AddE|AddV|BatchAddV|SearchV|DROP|UPDATE|COUNT|RANGE)\\b"
        },
        {
          "name": "keyword.other.traversal.helixql",
          "match": "\\b(Out|In|OutE|InE|FromN|ToN|ShortestPath)\\b"
        },
        {
          "name": "keyword.other.comparison.helixql",
          "match": "\\b(GT|GTE|LT|LTE|EQ|NEQ)\\b"
        },
        {
          "name": "keyword.other.special.helixql",
          "match": "\\b(ID|NONE|NOW|PREFILTER|DEFAULT|INDEX)\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "entity.name.type.primitive.helixql",
          "match": "\\b(String|Boolean|F32|F64|I8|I16|I32|I64|U8|U16|U32|U64|U128|Date|ID)\\b"
        },
        {
          "name": "entity.name.type.array.helixql",
          "match": "\\[([A-Z]\\w*)\\]",
          "captures": {
            "1": { "name": "entity.name.type.primitive.helixql" }
          }
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.helixql",
          "match": "<-"
        },
        {
          "name": "keyword.operator.traversal.helixql",
          "match": "::"
        },
        {
          "name": "keyword.operator.anonymous.helixql",
          "match": "_"
        },
        {
          "name": "keyword.operator.closure.helixql",
          "match": "\\|"
        },
        {
          "name": "keyword.operator.spread.helixql",
          "match": "\\.\\."
        },
        {
          "name": "keyword.operator.exclude.helixql",
          "match": "!"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "string.quoted.double.helixql",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.helixql",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "constant.numeric.float.helixql",
          "match": "\\b\\d+\\.\\d+\\b"
        },
        {
          "name": "constant.numeric.integer.helixql",
          "match": "\\b\\d+\\b"
        },
        {
          "name": "constant.language.boolean.helixql",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "entity.name.type.uppercase.helixql",
          "match": "\\b[A-Z][A-Za-z0-9_]*\\b"
        },
        {
          "name": "variable.other.helixql",
          "match": "\\b[a-z][A-Za-z0-9_]*\\b"
        }
      ]
    }
  }
}